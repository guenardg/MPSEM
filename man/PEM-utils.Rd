% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PEM-utils.R
\name{PEM-utils}
\alias{PEM-utils}
\alias{isUnderEdge}
\alias{isUnderVertex}
\alias{aggregateOnVertex}
\title{Utility Function for Phylogenetic Eigenvector Maps}
\usage{
isUnderEdge(x, e)

isUnderVertex(x, v)

aggregateOnVertex(
  x,
  data,
  fun,
  ...,
  v = 1L:NROW(x),
  default = rep(0, NCOL(data))
)
}
\arguments{
\item{x}{A \code{\link{graph-class}} object.}

\item{e}{A numeric vector of indices or a character vector of names
representing one or more edges.}

\item{v}{A numeric vector of indices or a character vector of names
representing one or more vertices. The default for function
\code{aggregateOnVertex} is all the vertices of \code{x}.}

\item{data}{A \code{\link{matrix}} or \code{\link{data.frame}} containing
edge data to be aggregated on the graph's vertices.}

\item{fun}{A function to be applied on the incoming edges of the vertices.}

\item{...}{Supplementary arguments to be internally passed to \code{fun}.}

\item{default}{A vector of values to be assigned to vertices that have no
incoming edges. The default is a vector of zeros with the same length as the
number of columns is \code{data}.}
}
\value{
Functions \code{isUnderEdge} and \code{isUnderVertex} return a matrix
of binary contrasts whose rows represent the edges of the graph and columns
the edges or vertices given as indices or names to function
\code{isUnderEdge} (argument \code{e}) or \code{isUnderVertex} (argument
\code{v}), respectively. Function \code{aggregateOnVertex} returns a matrix
whose rows represent the vertices specified by its argument \code{v} and
columns represent the variables given using its argument \code{data}.
}
\description{
A set of functions to help in calculating Phylogenetic
Eigenvector Maps (PEM).
}
\details{
Functions \code{isUnderEdge} and \code{isUnderVertex} are used to
set individual graph locations, in terms of edges or vertices where shifts in
the values of selection (a) and/or evolution rate (psi) parameters are
occurring. The binary contrasts matrices generated by function
\code{isUnderEdge} and \code{isUnderVertex} are used as descriptors in models
representing these subordinate parameters using higher order ones.

Function \code{aggregateOnVertex} allows one to aggregate variables
associated with the edges on their destination vertices using a user-defined
function.
}
\section{Functions}{
\itemize{
\item \code{isUnderEdge()}: Edges Under or At an Edge

Identify which of the edges of a graph are located at or under one or more
of the graph's edges using a binary contrast matrix.

\item \code{isUnderVertex()}: Edges Under a Vertex

Identify which of the edges of a graph are located under one or more of the
graph's vertices using a binary contrast matrix.

\item \code{aggregateOnVertex()}: Aggregate on Vertex

Aggregate incoming edge values on a vertex or a set of vertices.

}}
\examples{
## Synthetic example
data.frame(
  species = as.logical(c(0,0,1,0,0,0,0,0,0,0,1,1,1)),
  type = c(2,2,3,1,2,2,2,2,2,2,3,3,3),
  x = c(1,3,4,0,1.67,4,1,1.33,2.33,3.33,4.33,4,5),
  y = c(1,1,1,0,0.5,0,-1,0,0,-0.5,-1,-0.5,-0.5),
  row.names = sprintf("V\%d",1:13)
) \%>\%
st_as_sf(
  coords=c("x","y"),
  crs = NA
) \%>\%
graph \%>\%
add.edge(
  from = c(1,2,1,5,4,4,5,9,4,8,9,4,7,7,6,6,9,10,10),
  to = c(2,3,5,2,1,5,9,2,8,9,6,7,8,9,3,13,10,12,11),
  data = data.frame(
    distance = c(4.2,4.7,3.9,3.0,3.6,2.7,4.4,3.4,3.6,3.3,
                 4.8,3.2,3.5,4.4,2.5,3.4,4.3,3.1,2.2),
    row.names = sprintf("E\%d",1:19)
  )
) -> gr_ex

## Plot the graph:
plot(gr_ex, cex.min=3, cex.lab=0.6)

## Show the edges of the graph:
edge(gr_ex)

## Identify the edges that are under or at the edges E7 or E17 using a binary
## contrast matrix:
isUnderEdge(gr_ex, c("E7","E17"))

## Identify the edges that are under vertices V5 or V9 using a binary
## contrast matrix:
tmp <- isUnderVertex(gr_ex, c("V5","V9"))
tmp

## Aggregate the result of isUnderVertex() using the following function
## enables one to determine which of the vertices are found under V5 and V9:
aggregateOnVertex(gr_ex, tmp, function(x) ifelse(any(as.logical(x)),1,0))


}
\references{
GuÃ©nard, G., Legendre, P., and Peres-Neto, P. 2013. Phylogenetic eigenvector
maps: a framework to model and predict species traits. Methods in Ecology 
and Evolution. 4: 1120--1131

Makarenkov, V., Legendre, L. & Desdevise, Y. 2004. Modelling phylogenetic
relationships using reticulated networks. Zoologica Scripta 33: 89--96

Blanchet, F. G., Legendre, P. & Borcard, D. 2008. Modelling directional
spatial processes in ecological data. Ecological Modelling 215: 325--336
}
\seealso{
\code{\link{PEM-functions}}, \code{\link{PEM-class}}
}
\author{
\packageAuthor{MPSEM} --
Maintainer: \packageMaintainer{MPSEM}
}
